name: build and test notee client and node

on:
  workflow_dispatch:
  push:
    branches: [ master, sgx-master ]
  pull_request:
    branches: [ master, sgx-master ]
#  schedule:
#    - cron:  '42 3 * * *'
env:
  CARGO_TERM_COLOR: always
  INFURA_ADD_URL: "https://ipfs.infura.io:5001/api/v0/add"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: init-rust-target
      run: rustup target add wasm32-unknown-unknown

    - name: Cache Rust Dependecies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
          enclave/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    # With incremental compilation this bug occurs sometimes: https://github.com/rust-lang/rust/issues/84970
    # It can be fixed with a cargo clean of the innermost crate. Hence, we execute this cmd preemptively
    - name: Build
      run: |
        cargo clean -p encointer-node-notee
        cargo clean -p encointer-client-notee
        cargo build --release
    - uses: actions/upload-artifact@v2
      with:
        name: executables
        path: |
          target/release/encointer-node-notee
          target/release/encointer-client-notee

  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: init-rust-target
      run: rustup target add wasm32-unknown-unknown

    - name: Cache Rust Dependecies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
          enclave/target
        key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}

    - name: cargo test
      run: |
        cargo clean -p encointer-node-notee
        cargo clean -p encointer-client-notee
        cargo test --all

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: init-rust
      run: |
        rustup component add clippy
        rustup target add wasm32-unknown-unknown

    - name: Cache Rust Dependecies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
          enclave/target
        key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}

    - name: cargo clippy client
      run:  |
        cargo clean -p encointer-node-notee
        cargo clean -p encointer-client-notee
        cargo clippy -p encointer-client-notee

  test-bootstrapping:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@master

    - name: download build artifacts
      uses: actions/download-artifact@master

    - name: fix permissions of artifacts and move to original folder
      run: |
        chmod +x executables/encointer-node-notee
        chmod +x executables/encointer-client-notee
        mkdir -p target/release
        mv executables/* target/release

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Set up ipfs
      uses: ibnesayeed/setup-ipfs@master
      with:
        run_daemon: true

    - name: start dev node
      run:
        ./target/release/encointer-node-notee --tmp --dev --enable-offchain-indexing true --rpc-methods unsafe &

    - name: bootstrap community
      run: |
        cd client
        python bootstrap_demo_community.py

  test-community-growing:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@master

    - name: download build artifacts
      uses: actions/download-artifact@master

    - name: fix permissions of artifacts and move to original folder
      run: |
        chmod +x executables/encointer-node-notee
        chmod +x executables/encointer-client-notee
        mkdir -p target/release
        mv executables/* target/release

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: install py dependencies
      run: ./scripts/install_python_deps.sh

    - name: Set up ipfs
      uses: ibnesayeed/setup-ipfs@master
      with:
        run_daemon: true

    - name: start dev node
      run: ./target/release/encointer-node-notee --tmp --dev --enable-offchain-indexing true --rpc-methods unsafe &

    - name: grow community
      run: |
        cd client
        python bot-community.py init
        python bot-community.py run

  test-bazaar:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master

      - name: download build artifacts
        uses: actions/download-artifact@master

      - name: fix permissions of artifacts and move to original folder
        run: |
          chmod +x executables/encointer-node-notee
          chmod +x executables/encointer-client-notee
          mkdir -p target/release
          mv executables/* target/release

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: install py dependencies
        run: ./scripts/install_python_deps.sh

      - name: Set up ipfs
        uses: ibnesayeed/setup-ipfs@master
        with:
          run_daemon: true

      - name: start dev node
        run: ./target/release/encointer-node-notee --tmp --dev --enable-offchain-indexing true --rpc-methods unsafe &

      # note: this test can currently not fail. Need to update the register-business for that
      - name: register businesses
        run: |
          cd client
          python bot-community.py init --ipfs-api-key ${{ secrets.IPFS_API_KEY }} --ipfs-add-url {{env.INFURA_ADD_URL}}
          python register-businesses.py --ipfs-api-key ${{ secrets.IPFS_API_KEY }} --ipfs-add-url {{env.INFURA_ADD_URL}}
