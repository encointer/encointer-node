[package]
authors = ["encointer.org <alain@encointer.org>"]
edition = "2021"
homepage = "https://encointer.org"
license = "GPL-3.0"
name = "encointer-node-notee-runtime"
repository = "https://github.com/encointer/encointer-node/"
# minor revision must match node/client
# patch revision must match runtime spec_version
version = "1.8.31"

[dependencies]
parity-scale-codec = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true, optional = true }

# encointer deps
encointer-balances-tx-payment = { workspace = true }
encointer-balances-tx-payment-rpc-runtime-api = { workspace = true }
encointer-primitives = { workspace = true }
pallet-encointer-balances = { workspace = true }
pallet-encointer-bazaar = { workspace = true }
pallet-encointer-bazaar-rpc-runtime-api = { workspace = true }
pallet-encointer-ceremonies = { workspace = true }
pallet-encointer-ceremonies-rpc-runtime-api = { workspace = true }
pallet-encointer-communities = { workspace = true }
pallet-encointer-communities-rpc-runtime-api = { workspace = true }
pallet-encointer-democracy = { workspace = true }
pallet-encointer-faucet = { workspace = true }
pallet-encointer-reputation-commitments = { workspace = true }
pallet-encointer-scheduler = { workspace = true }

# substrate deps
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
pallet-asset-tx-payment = { workspace = true }
pallet-aura = { workspace = true }
pallet-balances = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-proxy = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-treasury = { workspace = true }
pallet-utility = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-genesis-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-staking = { workspace = true }
sp-std = { workspace = true }
sp-storage = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

frame-try-runtime = { workspace = true, optional = true }

# Used for the node's RPCs
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }
hex-literal = { workspace = true, optional = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
default = ["std"]
std = [
    "encointer-balances-tx-payment-rpc-runtime-api/std",
    "encointer-balances-tx-payment/std",
    "encointer-primitives/serde_derive",
    "encointer-primitives/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "frame-try-runtime/std",
    "pallet-asset-tx-payment/std",
    "pallet-aura/std",
    "pallet-balances/std",
    "pallet-encointer-balances/std",
    "pallet-encointer-bazaar-rpc-runtime-api/std",
    "pallet-encointer-bazaar/std",
    "pallet-encointer-ceremonies-rpc-runtime-api/std",
    "pallet-encointer-ceremonies/std",
    "pallet-encointer-communities-rpc-runtime-api/std",
    "pallet-encointer-communities/std",
    "pallet-encointer-democracy/std",
    "pallet-encointer-faucet/std",
    "pallet-encointer-reputation-commitments/std",
    "pallet-encointer-scheduler/std",
    "pallet-grandpa/std",
    "pallet-insecure-randomness-collective-flip/std",
    "pallet-proxy/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    "pallet-transaction-payment/std",
    "pallet-treasury/std",
    "parity-scale-codec/std",
    "scale-info/std",
    "serde",
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-genesis-builder/std",
    "sp-inherents/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
]
runtime-benchmarks = [
    "frame-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "hex-literal",
    "pallet-balances/runtime-benchmarks",
    "pallet-encointer-balances/runtime-benchmarks",
    "pallet-encointer-bazaar/runtime-benchmarks",
    "pallet-encointer-ceremonies/runtime-benchmarks",
    "pallet-encointer-communities/runtime-benchmarks",
    "pallet-encointer-democracy/runtime-benchmarks",
    "pallet-encointer-faucet/runtime-benchmarks",
    "pallet-encointer-reputation-commitments/runtime-benchmarks",
    "pallet-encointer-scheduler/runtime-benchmarks",
    "pallet-grandpa/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",
]

try-runtime = [
    "frame-executive/try-runtime",
    "frame-support/try-runtime",
    "frame-system/try-runtime",
    "frame-try-runtime/try-runtime",
    "pallet-asset-tx-payment/try-runtime",
    "pallet-aura/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-encointer-balances/try-runtime",
    "pallet-encointer-bazaar/try-runtime",
    "pallet-encointer-ceremonies/try-runtime",
    "pallet-encointer-communities/try-runtime",
    "pallet-encointer-democracy/try-runtime",
    "pallet-encointer-faucet/try-runtime",
    "pallet-encointer-reputation-commitments/try-runtime",
    "pallet-encointer-scheduler/try-runtime",
    "pallet-grandpa/try-runtime",
    "pallet-insecure-randomness-collective-flip/try-runtime",
    "pallet-proxy/try-runtime",
    "pallet-scheduler/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-transaction-payment/try-runtime",
    "pallet-treasury/try-runtime",
    "pallet-utility/try-runtime",
]
